/*
非线性逻辑结构

1. 树---逻辑结构：一对多
2. 树---存储结构：3种
	树型结构是一个具有n给数据的有限集合，每个数据放到一个节点中:
	(1)有一个特殊的结点:根节点，只有若干个后继节点，没有 前驱节点
	(2)剩下的n-1个节点，每个节点都有一个前驱和若干个后继节点。

n个结点: 叶子节点	内部结点
结点之间的关系:
	引入家族关系
	父子结点:父、(双亲)节点		孩子节点
	兄弟关系:广义的兄弟	狭义的兄弟关系
结点的度:		结点拥有的子树的个数，就称之为结点的度。
树的度:		在各个结点当中，度的最大值。为树的度。
树的深度或者高度:	数值上相等，就是树的层数

树的存储结构:	数据 + 数据之间的父子关系
1.双亲表示法
	顺序表存储，表元素包含数据和 父节点下标
		根节点 没有父节点，位置域置为-1
		优点： 找父节点方便 O(1)
		缺点： 找子节点需要遍历
2.孩子表示法
	顺序表依次存储树中各个结点，每个结点配备一个链表，指向孩子结点的位置
	叶子结点的链表为空

// 前两种以后应该都不会用到
3.孩子兄弟表示法	// 基于递归
*/

#include <iostream>
#include "test.h"
using namespace std;

int main()
{
	// test01();
	test03();
}